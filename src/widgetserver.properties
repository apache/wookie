widget.version=0.12.0-incubating
widget.build.date=
widget.email.contact=wookie-dev@incubator.apache.org
widget.web.page=http://incubator.apache.org/wookie
# Keep this true while developing, but set to false for a build
widget.debug=true
#######################################################################
# By default Wookie will use the same scheme/host/port it is being
# served from when generating URLs for widgets. By changing these
# settings you can override this, for example when deploying Wookie
# using a virtual host configuration.
#widget.server.scheme=
#widget.server.hostname=
#widget.server.port=
#######################################################################
## Sending emails
widget.email.server=localhost
widget.email.port=25
#widget.email.username=
#widget.email.password=
#######################################################################
widget.useruploadfolder=/upload
widget.widgetfolder=/wservices
#######################################################################
# Set hot_deploy to true, and .wgt files dropped into widget.deployfolder
# will automatically be added to the server
widget.deployfolder=/deploy
widget.hot_deploy=true
#######################################################################
# Location of Shindig services
widget.shindig.url=/
widget.metadata.url=/gadgets/metadata
#######################################################################
widget.proxy.usewhitelist=true
widget.proxy.checkdomain=false
##  local proxy settings - note if no hostname is specified then no proxy will be used ##
widget.proxy.scheme=
widget.proxy.hostname=
widget.proxy.port=
## default is to use the Wookie whitelist proxy
widget.proxy.path=/proxy
## comment out the line above, and uncomment this to use the Shindig open proxy instead
# widget.proxy.path=/gadgets/proxy
widget.proxy.username=
widget.proxy.password=
widget.proxy.usentlmauthentication=false
## language settings
## NB "en-gb-yorks" is for testing localization
widget.locales=en, nl, fr, en-gb-yorks
widget.default.locale=en
#######################################################################
# Persistence manager configuration
widget.persistence.manager.classname=@PERSISTENCE_MANAGER_CLASSNAME@
#######################################################################
# JPA persistence manager configuration, (JNDI: java:comp/env/jdbc/wookie)
widget.persistence.manager.cachesize=1000
widget.persistence.manager.dbtype=@DATABASE_TYPE@
#######################################################################
# JCR persistence manager configuration, (JNDI: java:comp/env/jcr/wookie)
widget.persistence.manager.user=@REPOSITORY_USER@
widget.persistence.manager.password=@REPOSITORY_PASSWORD@
widget.persistence.manager.rootpath=@REPOSITORY_ROOTPATH@
widget.persistence.manager.workspace=@REPOSITORY_WORKSPACE@
# Queue preferences
widget.preferences.useinstancequeues=true
widget.shareddata.useinstancequeues=true
# Validator service preferences
# Allow **anyone** to upload .wgt packages to wookie for validation
# Note: .wgt resources are removed after validation and are not imported permanently.
widget.enable.validator=false
# Broadcast imported widget events to specified url
# The widget identifier is POSTed to the url defined in widget.import.broadcast.url
widget.import.broadcast=false
widget.import.broadcast.url=
#######################################################################
# digital signature settings
# Set this property to have Wookie check widget digital signatures when
# deploying a widget
widget.deployment.verifysignature=true
#
# Set this property to determine how Wookie treats widgets with invalid
# digital signatures.
#
# If set to true, Wookie will not deploy any widgets with invalid
# digital signatures. If set to false, the widget will be imported
# and a warning logged.
widget.deployment.rejectinvalidsignatures=false
#
# If set to true, Wookie will only deploy Widgets that have valid digital signatures
# AND that each signature uses a trusted certificate located in the trusted keystore,
# disregarding setting the above to false.
widget.deployment.rejectuntrustedsignatures=false
#
# Name of the trusted keystore file
widget.deployment.trustedkeystore=wookieKeystore.jks
#Password for the trusted keystore file
widget.deployment.trustedkeystore.password = wookie
