widget.version=0.15.0
widget.build.date=
widget.email.contact=dev@wookie.apache.org
widget.web.page=http://wookie.apache.org/
# Keep this true while developing, but set to false for a build
widget.debug=false

#######################################################################
# When set to true, Wookie will supply default values for height and 
# width for widgets where these aren't supplied in the widget metadata. 
# Set to false it will simply omit height and or width attributes when 
# returning widget instance metadata from the REST API
widget.use_default_sizes=true

#######################################################################
# By default Wookie will use the same scheme/host/port it is being
# served from when generating URLs for widgets. By changing these
# settings you can override this, for example when deploying Wookie
# using a virtual host configuration.
#widget.server.scheme=
#widget.server.hostname=
#widget.server.port=

#######################################################################
## Sending emails
widget.email.server=localhost
widget.email.port=25
#widget.email.username=
#widget.email.password=

#######################################################################
# Widget deployment settings - you normally won't need to change
# these
#
widget.useruploadfolder=/upload
widget.widgetfolder=/deploy
# Set hot_deploy to true, and .wgt files dropped into widget.deployfolder
# will automatically be added to the server
widget.deployfolder=/deploy
widget.hot_deploy=true

#######################################################################
# Location of Shindig services
#
widget.shindig.url=/
widget.metadata.url=/gadgets/metadata

#######################################################################
# Server-side proxy (SSP) 
#
# These settings are used for configuring the built-in proxy used to 
# handle Ajax requests by widgets, bypassing same-origin restrictions.
# 
# Set to true to use access policies to filter requests; this is
# *highly recommended*. Settings this to false allows any widget to 
# access any origin.
widget.proxy.usewhitelist=true
# Set this to true to verify that requests to the SSP originate with
# this server; this should be set to false where the server uses
# a virtual host configuration
widget.proxy.checkdomain=false
# Set these to override the default proxy location provided to widgets
widget.proxy.scheme=
widget.proxy.hostname=
widget.proxy.port=
widget.proxy.path=/proxy


#######################################################################
#
# System proxy settings
#
# When a system forwarding proxy is in place for your network, use
# the settings below to configure the internal proxy host and port. This
# information is used in the internal HttpClient configuration and is not
# exposed externally.
#
#system.proxy.hostname=
#system.proxy.port=
#system.proxy.username=
#system.proxy.password=
#system.proxy.usentlmauthentication=false

#######################################################################
# language settings
#
# NB "en-gb-yorks" is for testing localization
widget.locales=en, nl, fr, en-gb-yorks
widget.default.locale=en

#######################################################################
# Persistence manager configuration
widget.persistence.manager.classname=org.apache.wookie.beans.jpa.JPAPersistenceManager
# JPA persistence manager configuration, (JNDI: java:comp/env/jdbc/wookie)
widget.persistence.manager.cachesize=1000
widget.persistence.manager.dbtype=derby
# JCR persistence manager configuration, (JNDI: java:comp/env/jcr/wookie)
widget.persistence.manager.user=
widget.persistence.manager.password=
widget.persistence.manager.rootpath=
widget.persistence.manager.workspace=
# Queue preferences
widget.preferences.useinstancequeues=true
widget.shareddata.useinstancequeues=true

#######################################################################
# Validator service
#
# Allow **anyone** to upload .wgt packages to wookie for validation
# Note: .wgt resources are removed after validation and are not imported permanently.
widget.enable.validator=false

#######################################################################
# Broadcast updates
#
# Broadcast imported widget events to specified url
# The widget identifier is POSTed to the url defined in widget.import.broadcast.url
widget.import.broadcast=false
widget.import.broadcast.url=

#######################################################################
# Automatic updates
#
# To enable automatic updating of widgets, set the following to true
widget.updates.enabled=false
#
# By default, updates require HTTPS for security; you can change
# this by setting the following to false
widget.updates.requirehttps=true
#
# How often updates are checked, the default is "daily" but
# can also be set to "hourly" or "weekly".
widget.updates.frequency=daily

#######################################################################
# Locked domains
#
# Set this to true to use Locked Domains. When enabled, each widget 
# instance is served at a dynamically generated subdomain, e.g.
# http://1faed3456e9999-locked.wookie-example.com. This means that each 
# widget instance has a unique origin, and is sandboxed from all
# other widgets on the same page. Note that to enable this feature
# requires that your web server uses a wildcard subdomain configuration
# for Wookie, for example:
#
# mywookie.com A xxx.xxx.xxx.xxx
# *-locked.mywookie.com CNAME mywookie.com
#
widget.instance.lockeddomain.enabled=false

#######################################################################
# digital signature settings
#
# Set this property to have Wookie check widget digital signatures when
# deploying a widget
widget.deployment.verifysignature=true
#
# Set this property to determine how Wookie treats widgets with invalid
# digital signatures.
#
# If set to true, Wookie will not deploy any widgets with invalid
# digital signatures. If set to false, the widget will be imported
# and a warning logged.
widget.deployment.rejectinvalidsignatures=false
#
# If set to true, Wookie will only deploy Widgets that have valid digital signatures
# AND that each signature uses a trusted certificate located in the trusted keystore,
# disregarding setting the above to false.
widget.deployment.rejectuntrustedsignatures=false
#
# Name of the trusted keystore file
widget.deployment.trustedkeystore=wookieKeystore.jks
#Password for the trusted keystore file
widget.deployment.trustedkeystore.password = wookie
