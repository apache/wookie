<?xml version="1.0" encoding="UTF-8"?>
<!--
		Licensed to the Apache Software Foundation (ASF) under one or more
		contributor license agreements. See the NOTICE file distributed with
		this work for additional information regarding copyright ownership.
		The ASF licenses this file to You under the Apache License, Version
		2.0 (the "License"); you may not use this file except in compliance
		with the License. You may obtain a copy of the License at

		http://www.apache.org/licenses/LICENSE-2.0 Unless required by
		applicable law or agreed to in writing, software distributed under the
		License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
		CONDITIONS OF ANY KIND, either express or implied. See the License for
		the specific language governing permissions and limitations under the
		License.
	-->
<project xmlns:ivy="antlib:org.apache.ivy.ant">

	<import file="ivy-java-common.xml" />
	<import file="ivy-webapp-common.xml" />

	<tstamp />
	<property name="wookie.source.folder.name" value="wookie-source" />
	<property name="wookie.war.folder.name" value="wookie-war" />
	<property name="wookie.standalone.folder.name" value="wookie-standalone" />
	<property name="wookie.source.zip.name"
		value="org.apache.incubator.wookie-source-${version}-${DSTAMP}" />	
	<property name="wookie.standalone.zip.name"
		value="org.apache.incubator.wookie-standalone-${version}-${DSTAMP}" />
	<property name="wookie.war.name"
		value="org.apache.incubator.wookie-war-${version}-${DSTAMP}" />


	<target name="build-release-all"
		depends="build-release-src, build-release-standalone, build-release-war">
		<echo>Building all releases</echo>
	</target>

	<target name="build-release-src" depends="">
		<echo>Building source release</echo>
		<mkdir dir="${wookie.release.dir}/" />
		
		<zip destfile="${wookie.release.dir}/${wookie.source.zip.name}.zip"
		       basedir="."
			includes=".settings/, 
			ant/, 
			connector/, 
			docs/,
			etc/, 
			features/, 
			licenses/, 
			parser/,
			project_admin/, 
			schemas/,
			scripts/, 
			shindig/, 
			src/,
			src-tests/, 
			tutorials/, 
			WebContent/, 
			widgets/,
			.classpath,
			.project,
			build.properties,
			build.xml,
			ivy.xml,
			LICENSE,
			NOTICE,
			readme.txt"   
		  />
		
		<!-- tar -->
		<tar destfile="${wookie.release.dir}/${wookie.source.zip.name}.tar.gz"
			compression="gzip">
			<zipfileset src="${wookie.release.dir}/${wookie.source.zip.name}.zip" />
		</tar>
		
	</target>

	<target name="build-release-war" depends="compile-core, deploy-webapp, post-deploy-webapp">
		<echo>Building war release</echo>
		<delete dir="${wookie.release.dir}/${wookie.war.folder.name}" />
		<mkdir dir="${wookie.release.dir}/${wookie.war.folder.name}/build/scripts/" />

		<!-- build war file -->
		<war
			destfile="${wookie.release.dir}/${wookie.war.folder.name}/build/wookie.war"
			webxml="${build.dir}/webapp/wookie/WEB-INF/web.xml">
			<lib dir="${build.dir}/webapp/wookie/WEB-INF/lib" />
			<classes dir="${build.dir}/webapp/wookie/WEB-INF/classes" />
			<fileset dir="${build.dir}/webapp/wookie/">
				<exclude name="WEB-INF/classes/" />
				<exclude name="WEB-INF/lib/" />
			</fileset>
		</war>

		<!-- copy sql scripts across -->
		<copy todir="${wookie.release.dir}/${wookie.war.folder.name}/build/scripts/">
			<fileset dir="${build.dir}/classes/org/apache/wookie/beans/jpa/">
				<include name="*.sql" />
			</fileset>
		</copy>

		<!-- copy readme, licenses, etc -->
		<copy file="etc/release/war/README"
			tofile="${wookie.release.dir}/${wookie.war.folder.name}/build/README"
			overwrite="yes" />
		<copy file="NOTICE"
			tofile="${wookie.release.dir}/${wookie.war.folder.name}/build/NOTICE"
			overwrite="yes" />
		<copy file="LICENSE"
			tofile="${wookie.release.dir}/${wookie.war.folder.name}/build/LICENSE"
			overwrite="yes" />

		<copy file="${etc.dir}/tomcat/conf/jpa-context.xml" tofile="${wookie.release.dir}/${wookie.war.folder.name}/build/${ant.project.name}.xml" overwrite="true">
			<filterset>
				<filter token="DATABASE_USER" value="java" />
				<filter token="DATABASE_PASSWORD" value="java" />
				<filter token="DATABASE_DRIVER" value="com.mysql.jdbc.Driver" />
				<filter token="DATABASE_URI" value="jdbc:mysql://localhost:3306/widgetdb" />
			</filterset>
		</copy>

		<!-- zip -->
		<zip destfile="${wookie.release.dir}/${wookie.war.name}.zip" basedir="${wookie.release.dir}/${wookie.war.folder.name}/build/" update="true" />

		<!-- tar -->
		<tar destfile="${wookie.release.dir}/${wookie.war.name}.tar.gz"
			compression="gzip">
			<zipfileset src="${wookie.release.dir}/${wookie.war.name}.zip" />
		</tar>

		<!-- clean up -->
		<delete dir="${wookie.release.dir}/${wookie.war.folder.name}" />

	</target>

	<target name="build-release-standalone" depends="compile-core, deploy-webapp, post-deploy-webapp">

		<echo>Building standalone release</echo>
		<delete dir="${wookie.release.dir}/${wookie.standalone.folder.name}" />
		<mkdir dir="${wookie.release.dir}/${wookie.standalone.folder.name}/build/" />
		<mkdir dir="${wookie.release.dir}/${wookie.standalone.folder.name}/lib/" />
		<mkdir dir="${wookie.release.dir}/${wookie.standalone.folder.name}/etc/" />

		<copy todir="${wookie.release.dir}/${wookie.standalone.folder.name}/build/">
			<fileset dir="${build.dir}/">
				<exclude name="classes/" />
				<exclude name="widgets/" />
				<exclude name="**/*.java" />
			</fileset>
		</copy>

		<copy todir="${wookie.release.dir}/${wookie.standalone.folder.name}/">
			<fileset dir="etc/release/standalone/" />
		</copy>

		<copy file="./etc/jetty-realm.properties"
			tofile="${wookie.release.dir}/${wookie.standalone.folder.name}/etc/jetty-realm.properties" />
		<copy file="NOTICE"
			tofile="${wookie.release.dir}/${wookie.standalone.folder.name}/NOTICE"
			overwrite="yes" />
		<copy file="LICENSE"
			tofile="${wookie.release.dir}/${wookie.standalone.folder.name}/LICENSE"
			overwrite="yes" />

		<ivy:retrieve conf="runtime"
			pattern="${wookie.release.dir}/${wookie.standalone.folder.name}/lib/[artifact]-[revision].[ext]" />

		<zip destfile="${wookie.release.dir}/${wookie.standalone.zip.name}.zip"
			basedir="${wookie.release.dir}/" includes="${wookie.standalone.folder.name}/"
			update="true" />

		<tar destfile="${wookie.release.dir}/${wookie.standalone.zip.name}.tar.gz"
			compression="gzip">
			<zipfileset src="${wookie.release.dir}/${wookie.standalone.zip.name}.zip" />
		</tar>

		<delete dir="${wookie.release.dir}/${wookie.standalone.folder.name}" />
	</target>

</project>