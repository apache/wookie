<?xml version="1.0" encoding="UTF-8"?>
<xs:schema targetNamespace="http://www.w3.org/ns/widgets" 
	elementFormDefault="qualified" 
	version="Widgets W3C 1.0"
	attributeFormDefault="unqualified" 
	xmlns:xml="http://www.w3.org/XML/1998/namespace" 	 	
	xmlns="http://www.w3.org/ns/widgets"	 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:xsi="http://www.w3.org/2000/10/XMLSchema-instance">
		    
    <xs:import namespace="http://www.w3.org/XML/1998/namespace" 
	schemaLocation="http://www.w3.org/2001/03/xml.xsd"/>

    <xs:annotation>
		<xs:documentation>
			XSD Data File Information
			-------------------------
			Author: Paul Sharples			
			Date: 27th May, 2009
			Version: 1.2			
			Status: third release
			Description: Widget Server manifest format. 
			Based on the draft w3c spec found at:
			http://dev.w3.org/2006/waf/widgets			
        </xs:documentation>
	</xs:annotation>

	<xs:element name="widget" type="widgetType" />
	<xs:element name="name" type="nameType" />
	<xs:element name="author" type="authorType" />
	<xs:element name="license" type="licenseType" />
	<xs:element name="icon" type="iconType" />
	<xs:element name="description" type="descriptionType" />
	<xs:element name="content" type="contentType" />
	<xs:element name="feature" type="featureType" />
	<xs:element name="preference" type="preferenceType" />
	<xs:element name="param" type="parameterType" />
	<!-- not sure if this element has been deprecated -->
	<xs:element name="access" type="accessType" />

	<xs:complexType name="widgetType">
		<xs:sequence maxOccurs="unbounded" minOccurs="0">
			<xs:choice>
				<xs:element ref="name" maxOccurs="unbounded" minOccurs="0" />
				<xs:element ref="description" maxOccurs="unbounded" minOccurs="0" />
				<xs:element ref="author" maxOccurs="1" minOccurs="0" />
				<xs:element ref="license" maxOccurs="unbounded" minOccurs="0" />
				<xs:element ref="icon" maxOccurs="unbounded" minOccurs="0" />
				<xs:element ref="content" maxOccurs="1" minOccurs="0"></xs:element>
				<xs:element ref="feature" maxOccurs="unbounded" minOccurs="0"></xs:element>
				<xs:element ref="preference" minOccurs="0" maxOccurs="unbounded"></xs:element>
				<xs:element ref="access" maxOccurs="unbounded" minOccurs="0" />
			</xs:choice>
		</xs:sequence>
		
			
		<xs:attribute name="id" type="xs:anyURI">
			<xs:annotation>
				<xs:documentation>
					Optional. A valid URI that denotes a unique
					identifier for the widget.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		
		<xs:attribute name="version" type="xs:string">
			<xs:annotation>
				<xs:documentation>
					Optional. A valid version-tag that specifies the
					version of the widget.
				</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		
		<xs:attribute name="height">
			<xs:annotation>
				<xs:documentation>
					Optional. A valid non-negative integer greater
					than
					0 that controls the initial height dimensions of the
					instantiated widget in CSS pixels [CSS21]. When the
					value is
					missing, the widget user agent will assume
					the value 300.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minInclusive value="0"></xs:minInclusive>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		
		<xs:attribute name="width">
			<xs:annotation>
				<xs:documentation>
					Optional. A valid non-negative integer greater
					than
					0 that controls the initial width dimensions of the
					instantiated widget in CSS pixels [CSS21]. When the
					value is
					missing, the widget user agent will assume
					the value 150.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:int">
					<xs:minInclusive value="0"></xs:minInclusive>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
		
        <xs:attribute ref="xml:lang" />
        
        <xs:attribute name="viewmodes">
			<xs:annotation>
				<xs:documentation>
					Optional. A keyword attribute whose value is
					either
					application, floating, fullscreen, mini, or all (see the Window Modes
					section
					for definitions of each kind of window
					mode). When the value is
					missing, the widget user
					agent will assume the value default.
				</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:restriction base="xs:string">
					<xs:enumeration value="application"></xs:enumeration>
					<xs:enumeration value="floating"></xs:enumeration>
					<xs:enumeration value="fullscreen"></xs:enumeration>
					<xs:enumeration value="mini"></xs:enumeration>
					<xs:enumeration value="all"></xs:enumeration>
				</xs:restriction>
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="authorType">
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute name="href" type="xs:anyURI"></xs:attribute>
				<xs:attribute name="email" type="xs:string"></xs:attribute>									
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>
	
	<xs:complexType name="descriptionType">
		<xs:annotation>
			<xs:documentation>The description element represents a human-readable description of the widget.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute ref="xml:lang"/>				
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="nameType">
		<xs:annotation>
			<xs:documentation>The name of the widget.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute ref="xml:lang"/>	
				<xs:attribute name="short" type="xs:string"/>			
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="licenseType">
		<xs:annotation>
			<xs:documentation>A License.</xs:documentation>
		</xs:annotation>
		<xs:simpleContent>
			<xs:extension base="xs:string">
				<xs:attribute ref="xml:lang"/>	
				<xs:attribute name="href" type="xs:anyURI"/>			
			</xs:extension>
		</xs:simpleContent>
	</xs:complexType>

	<xs:complexType name="parameterType">
		<xs:attribute name="name" type="xs:string" use="required"></xs:attribute>
		<xs:attribute name="value" type="xs:string"  use="required"></xs:attribute>
	</xs:complexType>

	<xs:complexType name="featureType">
		<xs:sequence minOccurs="0">
			<xs:element ref="param" maxOccurs="unbounded" minOccurs="0" />
		</xs:sequence>	
		<xs:attribute name="name" type="xs:anyURI" use="required"></xs:attribute>
		<xs:attribute name="required" type="xs:boolean"></xs:attribute>
	</xs:complexType>

	<xs:complexType name="preferenceType">
		<xs:attribute name="name" type="xs:string" use="required"></xs:attribute>
		<xs:attribute name="value" type="xs:string"></xs:attribute>
		<xs:attribute name="readonly" type="xs:boolean"></xs:attribute>
	</xs:complexType>

	<xs:complexType name="contentType">
		<xs:attribute name="src" type="xs:string" use="required"></xs:attribute>
		<xs:attribute name="type">
			<xs:simpleType>
				<xs:restriction base="xs:string" />
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="charset">
			<xs:simpleType>
				<xs:restriction base="xs:string" />
			</xs:simpleType>
		</xs:attribute>
	</xs:complexType>

	<xs:complexType name="iconType">		
				<xs:attribute name="src" type="xs:string" use="required"></xs:attribute>
				<xs:attribute name="width">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"></xs:minInclusive>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>
				<xs:attribute name="height">
					<xs:simpleType>
						<xs:restriction base="xs:int">
							<xs:minInclusive value="0"></xs:minInclusive>
						</xs:restriction>
					</xs:simpleType>
				</xs:attribute>		
	</xs:complexType>
	
	<xs:complexType name="accessType">
		<xs:attribute name="uri" type="xs:anyURI" use="required"></xs:attribute>
		<xs:attribute name="subdomains" type="xs:boolean"></xs:attribute>
	</xs:complexType>
</xs:schema>